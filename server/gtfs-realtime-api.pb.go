// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.26.1
// source: gtfs-realtime-api.proto

package server

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListVehiclePositionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Agency ID (UUID)
	AgencyId      string                 `protobuf:"bytes,1,opt,name=agency_id,json=agencyId,proto3" json:"agency_id,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	BufferSeconds int64                  `protobuf:"varint,3,opt,name=buffer_seconds,json=bufferSeconds,proto3" json:"buffer_seconds,omitempty"`
}

func (x *ListVehiclePositionsRequest) Reset() {
	*x = ListVehiclePositionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gtfs_realtime_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListVehiclePositionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVehiclePositionsRequest) ProtoMessage() {}

func (x *ListVehiclePositionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gtfs_realtime_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVehiclePositionsRequest.ProtoReflect.Descriptor instead.
func (*ListVehiclePositionsRequest) Descriptor() ([]byte, []int) {
	return file_gtfs_realtime_api_proto_rawDescGZIP(), []int{0}
}

func (x *ListVehiclePositionsRequest) GetAgencyId() string {
	if x != nil {
		return x.AgencyId
	}
	return ""
}

func (x *ListVehiclePositionsRequest) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *ListVehiclePositionsRequest) GetBufferSeconds() int64 {
	if x != nil {
		return x.BufferSeconds
	}
	return 0
}

type ListVehiclePositionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Agency ID (UUID)
	AgencyId         string             `protobuf:"bytes,1,opt,name=agency_id,json=agencyId,proto3" json:"agency_id,omitempty"`
	VehiclePositions []*VehiclePosition `protobuf:"bytes,2,rep,name=vehicle_positions,json=vehiclePositions,proto3" json:"vehicle_positions,omitempty"`
}

func (x *ListVehiclePositionsResponse) Reset() {
	*x = ListVehiclePositionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gtfs_realtime_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListVehiclePositionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVehiclePositionsResponse) ProtoMessage() {}

func (x *ListVehiclePositionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gtfs_realtime_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVehiclePositionsResponse.ProtoReflect.Descriptor instead.
func (*ListVehiclePositionsResponse) Descriptor() ([]byte, []int) {
	return file_gtfs_realtime_api_proto_rawDescGZIP(), []int{1}
}

func (x *ListVehiclePositionsResponse) GetAgencyId() string {
	if x != nil {
		return x.AgencyId
	}
	return ""
}

func (x *ListVehiclePositionsResponse) GetVehiclePositions() []*VehiclePosition {
	if x != nil {
		return x.VehiclePositions
	}
	return nil
}

type VehiclePosition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID (UUID)
	Id                   string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TripId               *string                `protobuf:"bytes,2,opt,name=trip_id,json=tripId,proto3,oneof" json:"trip_id,omitempty"`
	RouteId              *string                `protobuf:"bytes,3,opt,name=route_id,json=routeId,proto3,oneof" json:"route_id,omitempty"`
	DirectionId          *int32                 `protobuf:"varint,4,opt,name=direction_id,json=directionId,proto3,oneof" json:"direction_id,omitempty"`
	StartDatetime        *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=start_datetime,json=startDatetime,proto3,oneof" json:"start_datetime,omitempty"`
	ScheduleRelationship *string                `protobuf:"bytes,6,opt,name=schedule_relationship,json=scheduleRelationship,proto3,oneof" json:"schedule_relationship,omitempty"`
	VehicleId            *string                `protobuf:"bytes,7,opt,name=vehicle_id,json=vehicleId,proto3,oneof" json:"vehicle_id,omitempty"`
	VehicleLabel         *string                `protobuf:"bytes,8,opt,name=vehicle_label,json=vehicleLabel,proto3,oneof" json:"vehicle_label,omitempty"`
	VehiclePosition      *Coordinate            `protobuf:"bytes,9,opt,name=vehicle_position,json=vehiclePosition,proto3,oneof" json:"vehicle_position,omitempty"`
	CurrentStopSequence  *int32                 `protobuf:"varint,10,opt,name=current_stop_sequence,json=currentStopSequence,proto3,oneof" json:"current_stop_sequence,omitempty"`
	StopId               *string                `protobuf:"bytes,11,opt,name=stop_id,json=stopId,proto3,oneof" json:"stop_id,omitempty"`
	Timestamp            *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=timestamp,proto3,oneof" json:"timestamp,omitempty"`
}

func (x *VehiclePosition) Reset() {
	*x = VehiclePosition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gtfs_realtime_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehiclePosition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehiclePosition) ProtoMessage() {}

func (x *VehiclePosition) ProtoReflect() protoreflect.Message {
	mi := &file_gtfs_realtime_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehiclePosition.ProtoReflect.Descriptor instead.
func (*VehiclePosition) Descriptor() ([]byte, []int) {
	return file_gtfs_realtime_api_proto_rawDescGZIP(), []int{2}
}

func (x *VehiclePosition) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *VehiclePosition) GetTripId() string {
	if x != nil && x.TripId != nil {
		return *x.TripId
	}
	return ""
}

func (x *VehiclePosition) GetRouteId() string {
	if x != nil && x.RouteId != nil {
		return *x.RouteId
	}
	return ""
}

func (x *VehiclePosition) GetDirectionId() int32 {
	if x != nil && x.DirectionId != nil {
		return *x.DirectionId
	}
	return 0
}

func (x *VehiclePosition) GetStartDatetime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDatetime
	}
	return nil
}

func (x *VehiclePosition) GetScheduleRelationship() string {
	if x != nil && x.ScheduleRelationship != nil {
		return *x.ScheduleRelationship
	}
	return ""
}

func (x *VehiclePosition) GetVehicleId() string {
	if x != nil && x.VehicleId != nil {
		return *x.VehicleId
	}
	return ""
}

func (x *VehiclePosition) GetVehicleLabel() string {
	if x != nil && x.VehicleLabel != nil {
		return *x.VehicleLabel
	}
	return ""
}

func (x *VehiclePosition) GetVehiclePosition() *Coordinate {
	if x != nil {
		return x.VehiclePosition
	}
	return nil
}

func (x *VehiclePosition) GetCurrentStopSequence() int32 {
	if x != nil && x.CurrentStopSequence != nil {
		return *x.CurrentStopSequence
	}
	return 0
}

func (x *VehiclePosition) GetStopId() string {
	if x != nil && x.StopId != nil {
		return *x.StopId
	}
	return ""
}

func (x *VehiclePosition) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type Coordinate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Latitude  float32 `protobuf:"fixed32,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude float32 `protobuf:"fixed32,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
}

func (x *Coordinate) Reset() {
	*x = Coordinate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gtfs_realtime_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Coordinate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Coordinate) ProtoMessage() {}

func (x *Coordinate) ProtoReflect() protoreflect.Message {
	mi := &file_gtfs_realtime_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Coordinate.ProtoReflect.Descriptor instead.
func (*Coordinate) Descriptor() ([]byte, []int) {
	return file_gtfs_realtime_api_proto_rawDescGZIP(), []int{3}
}

func (x *Coordinate) GetLatitude() float32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *Coordinate) GetLongitude() float32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

var File_gtfs_realtime_api_proto protoreflect.FileDescriptor

var file_gtfs_realtime_api_proto_rawDesc = []byte{
	0x0a, 0x17, 0x67, 0x74, 0x66, 0x73, 0x2d, 0x72, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x2d,
	0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x67, 0x74, 0x66, 0x73, 0x5f,
	0x72, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9b, 0x01,
	0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x61, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x62, 0x75,
	0x66, 0x66, 0x65, 0x72, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x8c, 0x01, 0x0a, 0x1c,
	0x4c, 0x69, 0x73, 0x74, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x61, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x61, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x64, 0x12, 0x4f, 0x0a, 0x11, 0x76, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x74, 0x66, 0x73, 0x5f, 0x72, 0x65, 0x61, 0x6c,
	0x74, 0x69, 0x6d, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x10, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xfd, 0x05, 0x0a, 0x0f, 0x56,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c,
	0x0a, 0x07, 0x74, 0x72, 0x69, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x06, 0x74, 0x72, 0x69, 0x70, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01,
	0x52, 0x07, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x48, 0x02, 0x52, 0x0b, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x46, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x03, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x44, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x38, 0x0a, 0x15,
	0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x68, 0x69, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x14, 0x73,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x68, 0x69, 0x70, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x09, 0x76, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x76, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x06, 0x52, 0x0c, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x88, 0x01, 0x01, 0x12, 0x4d, 0x0a, 0x10, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x5f,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x67, 0x74, 0x66, 0x73, 0x5f, 0x72, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x48, 0x07, 0x52,
	0x0f, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x88, 0x01, 0x01, 0x12, 0x37, 0x0a, 0x15, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x73,
	0x74, 0x6f, 0x70, 0x5f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x05, 0x48, 0x08, 0x52, 0x13, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x6f,
	0x70, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x07,
	0x73, 0x74, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x6f, 0x70, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x3d, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x0a, 0x52, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x74, 0x72,
	0x69, 0x70, 0x5f, 0x69, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f,
	0x69, 0x64, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x18, 0x0a, 0x16, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70,
	0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x42,
	0x10, 0x0a, 0x0e, 0x5f, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x18, 0x0a, 0x16, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65,
	0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x42, 0x0c, 0x0a, 0x0a,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x46, 0x0a, 0x0a, 0x43, 0x6f,
	0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69,
	0x74, 0x75, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69,
	0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75,
	0x64, 0x65, 0x32, 0x90, 0x01, 0x0a, 0x13, 0x47, 0x54, 0x46, 0x53, 0x52, 0x65, 0x61, 0x6c, 0x74,
	0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x79, 0x0a, 0x14, 0x4c, 0x69,
	0x73, 0x74, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x2e, 0x2e, 0x67, 0x74, 0x66, 0x73, 0x5f, 0x72, 0x65, 0x61, 0x6c, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x67, 0x74, 0x66, 0x73, 0x5f, 0x72, 0x65, 0x61, 0x6c, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x2e, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x61, 0x6e, 0x74, 0x61, 0x63, 0x6b, 0x79, 0x2f, 0x67, 0x74, 0x66,
	0x73, 0x2d, 0x72, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gtfs_realtime_api_proto_rawDescOnce sync.Once
	file_gtfs_realtime_api_proto_rawDescData = file_gtfs_realtime_api_proto_rawDesc
)

func file_gtfs_realtime_api_proto_rawDescGZIP() []byte {
	file_gtfs_realtime_api_proto_rawDescOnce.Do(func() {
		file_gtfs_realtime_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_gtfs_realtime_api_proto_rawDescData)
	})
	return file_gtfs_realtime_api_proto_rawDescData
}

var file_gtfs_realtime_api_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_gtfs_realtime_api_proto_goTypes = []interface{}{
	(*ListVehiclePositionsRequest)(nil),  // 0: gtfs_realtime_api.ListVehiclePositionsRequest
	(*ListVehiclePositionsResponse)(nil), // 1: gtfs_realtime_api.ListVehiclePositionsResponse
	(*VehiclePosition)(nil),              // 2: gtfs_realtime_api.VehiclePosition
	(*Coordinate)(nil),                   // 3: gtfs_realtime_api.Coordinate
	(*timestamppb.Timestamp)(nil),        // 4: google.protobuf.Timestamp
}
var file_gtfs_realtime_api_proto_depIdxs = []int32{
	4, // 0: gtfs_realtime_api.ListVehiclePositionsRequest.timestamp:type_name -> google.protobuf.Timestamp
	2, // 1: gtfs_realtime_api.ListVehiclePositionsResponse.vehicle_positions:type_name -> gtfs_realtime_api.VehiclePosition
	4, // 2: gtfs_realtime_api.VehiclePosition.start_datetime:type_name -> google.protobuf.Timestamp
	3, // 3: gtfs_realtime_api.VehiclePosition.vehicle_position:type_name -> gtfs_realtime_api.Coordinate
	4, // 4: gtfs_realtime_api.VehiclePosition.timestamp:type_name -> google.protobuf.Timestamp
	0, // 5: gtfs_realtime_api.GTFSRealtimeService.ListVehiclePositions:input_type -> gtfs_realtime_api.ListVehiclePositionsRequest
	1, // 6: gtfs_realtime_api.GTFSRealtimeService.ListVehiclePositions:output_type -> gtfs_realtime_api.ListVehiclePositionsResponse
	6, // [6:7] is the sub-list for method output_type
	5, // [5:6] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_gtfs_realtime_api_proto_init() }
func file_gtfs_realtime_api_proto_init() {
	if File_gtfs_realtime_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_gtfs_realtime_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListVehiclePositionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gtfs_realtime_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListVehiclePositionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gtfs_realtime_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehiclePosition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gtfs_realtime_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Coordinate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_gtfs_realtime_api_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gtfs_realtime_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_gtfs_realtime_api_proto_goTypes,
		DependencyIndexes: file_gtfs_realtime_api_proto_depIdxs,
		MessageInfos:      file_gtfs_realtime_api_proto_msgTypes,
	}.Build()
	File_gtfs_realtime_api_proto = out.File
	file_gtfs_realtime_api_proto_rawDesc = nil
	file_gtfs_realtime_api_proto_goTypes = nil
	file_gtfs_realtime_api_proto_depIdxs = nil
}
