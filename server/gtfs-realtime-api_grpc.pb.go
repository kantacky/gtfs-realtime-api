// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v5.26.1
// source: gtfs-realtime-api.proto

package server

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	GTFSRealtimeService_ListVehiclePositions_FullMethodName = "/gtfs_realtime_api.GTFSRealtimeService/ListVehiclePositions"
)

// GTFSRealtimeServiceClient is the client API for GTFSRealtimeService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type GTFSRealtimeServiceClient interface {
	ListVehiclePositions(ctx context.Context, in *ListVehiclePositionsRequest, opts ...grpc.CallOption) (*ListVehiclePositionsResponse, error)
}

type gTFSRealtimeServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewGTFSRealtimeServiceClient(cc grpc.ClientConnInterface) GTFSRealtimeServiceClient {
	return &gTFSRealtimeServiceClient{cc}
}

func (c *gTFSRealtimeServiceClient) ListVehiclePositions(ctx context.Context, in *ListVehiclePositionsRequest, opts ...grpc.CallOption) (*ListVehiclePositionsResponse, error) {
	out := new(ListVehiclePositionsResponse)
	err := c.cc.Invoke(ctx, GTFSRealtimeService_ListVehiclePositions_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GTFSRealtimeServiceServer is the server API for GTFSRealtimeService service.
// All implementations must embed UnimplementedGTFSRealtimeServiceServer
// for forward compatibility
type GTFSRealtimeServiceServer interface {
	ListVehiclePositions(context.Context, *ListVehiclePositionsRequest) (*ListVehiclePositionsResponse, error)
	mustEmbedUnimplementedGTFSRealtimeServiceServer()
}

// UnimplementedGTFSRealtimeServiceServer must be embedded to have forward compatible implementations.
type UnimplementedGTFSRealtimeServiceServer struct {
}

func (UnimplementedGTFSRealtimeServiceServer) ListVehiclePositions(context.Context, *ListVehiclePositionsRequest) (*ListVehiclePositionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListVehiclePositions not implemented")
}
func (UnimplementedGTFSRealtimeServiceServer) mustEmbedUnimplementedGTFSRealtimeServiceServer() {}

// UnsafeGTFSRealtimeServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to GTFSRealtimeServiceServer will
// result in compilation errors.
type UnsafeGTFSRealtimeServiceServer interface {
	mustEmbedUnimplementedGTFSRealtimeServiceServer()
}

func RegisterGTFSRealtimeServiceServer(s grpc.ServiceRegistrar, srv GTFSRealtimeServiceServer) {
	s.RegisterService(&GTFSRealtimeService_ServiceDesc, srv)
}

func _GTFSRealtimeService_ListVehiclePositions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListVehiclePositionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GTFSRealtimeServiceServer).ListVehiclePositions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: GTFSRealtimeService_ListVehiclePositions_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GTFSRealtimeServiceServer).ListVehiclePositions(ctx, req.(*ListVehiclePositionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// GTFSRealtimeService_ServiceDesc is the grpc.ServiceDesc for GTFSRealtimeService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var GTFSRealtimeService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "gtfs_realtime_api.GTFSRealtimeService",
	HandlerType: (*GTFSRealtimeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListVehiclePositions",
			Handler:    _GTFSRealtimeService_ListVehiclePositions_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "gtfs-realtime-api.proto",
}
